<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\SubscriptionController
 */
class SubscriptionControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function subscribe_forum_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $subscription = factory(\App\Models\Subscription::class)->create();
        $forum = factory(\App\Models\Forum::class)->create();
        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('subscribe_forum', ['route' => $subscription->route, $forum]));

        $response->assertRedirect(withSuccess('You are now subscribed to forum, '.$forum->name.'. You will now receive site notifications when a topic is started.'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function subscribe_topic_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $subscription = factory(\App\Models\Subscription::class)->create();
        $topic = factory(\App\Models\Topic::class)->create();
        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('subscribe_topic', ['route' => $subscription->route, $topic]));

        $response->assertRedirect(withSuccess('You are now subscribed to topic, '.$topic->name.'. You will now receive site notifications when a reply is left.'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function unsubscribe_forum_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $subscription = factory(\App\Models\Subscription::class)->create();
        $forum = factory(\App\Models\Forum::class)->create();
        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('unsubscribe_forum', ['route' => $subscription->route, $forum]));

        $response->assertRedirect(withSuccess('You are no longer subscribed to forum, '.$forum->name.'. You will no longer receive site notifications when a topic is started.'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function unsubscribe_topic_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $subscription = factory(\App\Models\Subscription::class)->create();
        $topic = factory(\App\Models\Topic::class)->create();
        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user)->get(route('unsubscribe_topic', ['route' => $subscription->route, $topic]));

        $response->assertRedirect(withSuccess('You are no longer subscribed to topic, '.$topic->name.'. You will no longer receive site notifications when a reply is left.'));

        // TODO: perform additional assertions
    }

    // test cases...
}
